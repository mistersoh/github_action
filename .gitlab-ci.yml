stages:
  # - build
  - test
  # - publish
  - deploy

variables:
  APP_NAME: webapp-argocd-demo
  CI_REGISTRY_IMAGE: wwsoh/$APP_NAME
  CD_CHART_REPO: webapp-chart
  CD_GIT_REPOSITORY: https://${CI_USERNAME}:${CI_PUSH_TOKEN}@192.168.108.46:8081/root/cicd-test.git
  CD_MANIFEST_FILE: Chart.yaml
  TAG: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA


# build:
#   stage: build
#   image:
#     name: golang:1.13.1
#   script:
#     - go build -o main main_test.go
#   artifacts:
#     paths:
#       - main
#   variables:
#     CGO_ENABLED: 0



test:
  stage: test
  image: golang:1.14

  before_script:
    - mkdir -p /go/src/gitlab.com
    - ln -s /builds/user /go/src/gitlab.com/user
  script:
    - apk add --no-cache git build-base
    - cd /go/src/gitlab.com/user/project
    - go get ./...
    - go test $(go list ./... | grep -v /vendor/) -v -coverprofile .testCoverage.txt

# build_image:
#   stage: build
#   image: docker:latest
#   services:
#       - docker:dind
#   script:
#     # Docker Build && Push image
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#     - cat Dockerfile
#     - docker pull $CI_REGISTRY_IMAGE:latest || true
#     - >
#       docker build
#       --cache-from $CI_REGISTRY_IMAGE:latest
#       --tag $CI_REGISTRY_IMAGE:$TAG
#       .
#     - docker push $CI_REGISTRY_IMAGE:$TAG

tag_latest_image:
  stage: deploy
  image: docker:latest
  services:
      - docker:dind
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_IMAGE:$TAG
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

deploy-dev:
  stage: deploy
  before_script:
    - apk add --no-cache git curl bash
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    - mv kustomize /usr/local/bin/
    - git remote set-url origin https://${CI_USERNAME}:${CI_PUSH_TOKEN}@192.168.108.46:8081/root/cicd-test.git
    - git config --global user.email "mistersoh@naver.com"
    - git config --global user.name "WWS"
  script:
    - git checkout -B master
    - cd deployment/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - cat kustomization.yaml
    - git commit -am 'DEV image update'
    - git push origin master
  only:
    - master

deploy-pord:
  stage: deploy
  before_script:
    - apk add --no-cache git curl bash
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    - mv kustomize /usr/local/bin/
    - git remote set-url origin https://${CI_USERNAME}:${CI_PUSH_TOKEN}@192.168.108.46:8081/root/cicd-test.git
    - git config --global user.email "mistersoh@naver.com"
    - git config --global user.name "WWS"
  script:
    - git checkout -B master
    - git pull origin master
    - cd deployment/prod
    - kustomize edit set image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - cat kustomization.yaml
    - git commit -am 'PROD image update'
    - git push origin master
  only:
    - master
  when: manual

# stages:
#   - build
#   - publish
#   - deploy-dev
#   - deploy-prod

# build:
#   stage: build
#   image:
#     name: golang:1.13.1
#   script:
#     - go build -o main main.go
#   artifacts:
#     paths:
#       - main
#   variables:
#     CGO_ENABLED: 0

# publish:
#   stage: publish
#   image:
#     name: gcr.io/kaniko-project/executor:debug
#     entrypoint: [""]
#   script:
#     - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#     - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile ./Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
#   dependencies:
#     - build  
#   only:
#     - master

# deploy-dev:
#   stage: deploy-dev
#   image: alpine:3.8
#   before_script:
#     - apk add --no-cache git curl bash
#     - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
#     - mv kustomize /usr/local/bin/
#     - git remote set-url origin https://${CI_USERNAME}:${CI_PUSH_TOKEN}@192.168.108.46:8081/root/cicd-test.git
#     - git config --global user.email "gitlab@gitlab.com"
#     - git config --global user.name "GitLab CI/CD"
#   script:
#     - git checkout -B master
#     - cd deployment/dev
#     - kustomize edit set image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
#     - cat kustomization.yaml
#     - git commit -am 'DEV image update'
#     - git push origin master
#   only:
#     - master

# deploy-prod:
#   stage: deploy-prod
#   image: alpine:3.8
#   before_script:
#     - apk add --no-cache git curl bash
#     - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
#     - mv kustomize /usr/local/bin/
#     - git remote set-url origin https://${CI_USERNAME}:${CI_PUSH_TOKEN}@192.168.108.46:8081/root/cicd-test.git
#     - git config --global user.email "gitlab@gitlab.com"
#     - git config --global user.name "GitLab CI/CD"
#   script:
#     - git checkout -B master
#     - git pull origin master
#     - cd deployment/prod
#     - kustomize edit set image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
#     - cat kustomization.yaml
#     - git commit -am 'PROD image update'
#     - git push origin master
#   only:
#     - master
#   when: manual
